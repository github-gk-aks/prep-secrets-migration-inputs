name: Fetch Repository Secrets

on:
  workflow_dispatch:


jobs:
  fetch-repo-secrets:
    runs-on: ubuntu-latest
    env:
        DEST_PAT_TOKEN: Dummy
    steps:
      - name: Checkout central repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GK_PAT }}
          path: ./source-repo

      - name: Check if output directory exists
        run: |
          if [ ! -d "${{ github.workspace }}/source-repo/output" ]; then
            echo "Output directory does not exist. Creating..."
            mkdir -p "${{ github.workspace }}/source-repo/output"
          else
            echo "Output directory already exists."
          fi
  
      - name: Import GPG key
        run: |
          echo "${GPG_PRIVATE_KEY}" | gpg --batch --import
        env: 
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Add the custom gpg signing program that passes the passphrase to the gpg CLI
        run: |
          rm -rf /tmp/gpg.sh
          echo '#!/bin/bash' >> /tmp/gpg.sh
          echo 'gpg --batch --pinentry-mode=loopback --passphrase $GPG_KEY_PASSPHRASE $@' >> /tmp/gpg.sh
          chmod +x /tmp/gpg.sh

      - name: Setup git
        run: |
          git config --global user.email ${{ secrets.GIT_COMMITTER_EMAIL }}
          git config --global user.name ${{ secrets.GIT_COMMITTER_NAME }}
          git config --global commit.gpgsign true
          git config --global user.signingkey $GPG_KEY_ID
          git config --global gpg.program /tmp/gpg.sh
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Fetch Repository Scoped Secrets
        run: |
            mapfile -t repositories < "${{ github.workspace }}/source-repo/repositories.txt"
            for repo in "${repositories[@]}"; do
                IFS='/' read -r org_name repo_name <<< "$repo"
                echo "Processing repository: $org_name/$repo_name" 
                response=$(curl -s -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "https://api.github.com/repos/$repo/actions/secrets")

                total_count=$(echo "$response" | jq -r '.total_count')

                if [ "$total_count" -eq 0 ]; then
                    echo "$repo_name;$org_name;${{ env.DEST_PAT_TOKEN }};No secrets" >> ${{ github.workspace }}/source-repo/output/repo-scoped-secrets.txt
                else
                    secrets=$(echo "$response" | jq -r '.secrets | map(.name) | join(", ")')
                    echo "$repo_name;$org_name;${{ env.DEST_PAT_TOKEN }};$secrets" >> ${{ github.workspace }}/source-repo/output/repo-scoped-secrets.txt
                fi   
            done
        
      - name: Upload result_codeowners.txt as artifact
        uses: actions/upload-artifact@v4
        with:
            name: repo-scoped-secrets.txt
            path: output

      - name: Commit Changes
        run: |
            cd ${{ github.workspace }}/source-repo/output
            if [ -n "$(git status --porcelain)" ]; then
                git pull origin main
                git add repo-scoped-secrets.txt
                git commit -S -m "Add repository scoped secrets.txt - $(date +"%Y-%m-%d %H:%M:%S")" 
                git push origin main
            else
                echo "There are no changes to commit."
            fi
        working-directory: ${{ github.workspace }}
        env:
            GPG_KEY_PASSPHRASE: ${{ secrets.PASSPHRASE }}
    
  convert-to-excel:
    needs: fetch-repo-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout central repository
        uses: actions/checkout@v4
        with:
            token: ${{ secrets.GK_PAT }}
            path: ./source-repo

      - name: Install python
        uses: actions/setup-python@v2
        with:
            python-version: '3.x'
        
      - name: Install pandas
        run: pip install pandas openpyxl
    
      - name: Download result_codeowners.txt artifact
        uses: actions/download-artifact@v4
        with:
           name: repo-scoped-secrets.txt
           path: output  # Download to the current directory

      - name: Convert to Excel
        run: |
            python3 <<EOF
            import pandas as pd

            # Read the data from repo-scoped-secrets.txt
            data = pd.read_csv('${{ github.workspace }}/source-repo/output/repo-scoped-secrets.txt', delimiter=';', names=['Repository', 'Organization', 'Destination PAT', 'Repository Token'])

            # Save as Excel file
            data.to_excel('${{ github.workspace }}/source-repo/output/repo-scoped-secrets.xlsx', index=False)
            EOF

      - name: Commit Changes
        run: |
            cd ${{ github.workspace }}/source-repo/output
            if [ -n "$(git status --porcelain)" ]; then
                git pull origin main
                git add repo-scoped-secrets.txt
                git commit -S -m "Add repository scoped secrets.txt - $(date +"%Y-%m-%d %H:%M:%S")" 
                git push origin main
            else
                echo "There are no changes to commit."
            fi
        working-directory: ${{ github.workspace }}
        env:
            GPG_KEY_PASSPHRASE: ${{ secrets.PASSPHRASE }}